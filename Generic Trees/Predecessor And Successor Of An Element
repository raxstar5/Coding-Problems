Predecessor And Successor Of An Element

Easy

1. You are given a partially written GenericTree class.
2. You are required to find the preorder predecessor and successor of a given element. Use the "travel and change" s
trategy explained in the earlier video. The static properties have been declared for you. You can declare more if you want.
3. Input and Output is managed for you.

#include<bits/stdc++.h>
using namespace std;



struct Node{
    int data;
    vector<Node*>children;
};

Node *pre ;
Node *suc ;
int state=0 ;


void prnsc(Node *node, int data){

    if(state == 0){
        if(node->data == data){
            state = 1;
        }
        else{
            pre = node;
        }
    }
    else if(state == 1){
        suc = node;
        state = 2;
    }     
      
    for(int i = 0; i < node->children.size(); i++){
        prnsc(node->children[i], data);
    }
    
}

