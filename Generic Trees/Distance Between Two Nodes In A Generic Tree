 Problem Statement:
 
 1. You are given a partially written GenericTree class.
2. You are required to complete the body of distanceBetweenNodes function.
The function is expected to return the distance (in terms of number of edges) between two nodes in a generic tree.
3. Input and Output is managed for you.

Example

Sample Input

24
10 20 50 -1 60 -1 -1 30 70 -1 80 110 -1 120 -1 -1 90 -1 -1 40 100 -1 -1 -1
100
110

Sample Output

5

Solution:

#include<bits/stdc++.h>
#include<climits>

using namespace std;

class Node
{
public:
  int data = 0;
  vector<Node *> children;

  Node(int data)
  {
    this->data = data;
  }
};

vector<int> *rootNodeToPath(Node *node, int data)
{

  if (node->data == data)
  {
    vector<int> *base = new vector<int>();
    base->push_back(data);
    return base;
  }

  vector<int> *ans = new vector<int>();
  for (Node *child : node->children)
  {
    vector<int> *recAns = rootNodeToPath(child, data);
    if (recAns->size() > 0)
    {
      recAns->push_back(node->data);
      return recAns;
    }
  }
  return ans;
}


int distance(Node *node, int data1, int data2)
{
  vector<int> onePath = *rootNodeToPath(node, data1);
  vector<int> twoPath = *rootNodeToPath(node, data2);

  int i = onePath.size() - 1;
  int j = twoPath.size() - 1;

  while(i>= 0 && j>= 0 && onePath[i] == twoPath[j] ){
      i--;
      j--;
  }
  i++;
  j++;
  return i+j;
}

